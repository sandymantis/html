{
  "presets": [
    ["@babel/preset-env", { "modules": false }],
    "@babel/preset-react"
  ],
  "plugins": []
}


{
  "presets": ["@babel/preset-env", "@babel/preset-react"]
}


// server.js
import express from 'express';
import { renderToString } from 'react-dom/server';
import React from 'react';
import App from './src/App';

const app = express();

// Serve static files
app.use(express.static('public'));

app.get('/', (req, res) => {
  // Render the React app to a string
  const html = renderToString(<App />);

  // Send the initial HTML with SSR content
  res.send(`
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>React SSR CSR</title>
      </head>
      <body>
        <div id="root">${html}</div>
        <script src="/bundle.js" type="module"></script>
      </body>
    </html>
  `);
});

app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});




// src/App.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';

const App = () => {
  const [joke, setJoke] = useState(null);
  const [isClientSide, setIsClientSide] = useState(false);

  // Fetch a joke initially (server-side rendered)
  useEffect(() => {
    fetchJoke();
  }, []);

  // Function to fetch a joke from the API
  const fetchJoke = () => {
    axios
      .get('https://official-joke-api.appspot.com/random_joke')
      .then((response) => setJoke(response.data))
      .catch((error) => console.error('Error fetching joke:', error));
  };

  // Fetch a joke client-side when the button is clicked
  const fetchClientSideJoke = () => {
    setIsClientSide(true);
    fetchJoke();
  };

  return (
    <div>
      <h1>React SSR with CSR Hydration</h1>
      <button onClick={fetchClientSideJoke}>Fetch Joke Client-Side</button>
      {joke ? (
        <div>
          <p>
            <strong>Setup:</strong> {joke.setup}
          </p>
          <p>
            <strong>Punchline:</strong> {joke.punchline}
          </p>
        </div>
      ) : (
        <p>Loading joke...</p>
      )}
      {isClientSide && <p>Joke fetched on the client side.</p>}
    </div>
  );
};

export default App;
